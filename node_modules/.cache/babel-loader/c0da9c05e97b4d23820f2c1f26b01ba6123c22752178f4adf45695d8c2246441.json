{"ast":null,"code":"import { invalidPreferredRedirectUrlException, invalidOriginException, invalidRedirectException } from '../../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/** @internal */\nfunction getRedirectUrl(redirects, preferredRedirectUrl) {\n  if (preferredRedirectUrl) {\n    const redirectUrl = redirects?.find(redirect => redirect === preferredRedirectUrl);\n    if (!redirectUrl) {\n      throw invalidPreferredRedirectUrlException;\n    }\n    return redirectUrl;\n  } else {\n    const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ?? redirects?.find(isTheSameDomain);\n    const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n    if (redirectUrlFromTheSameOrigin) {\n      return redirectUrlFromTheSameOrigin;\n    } else if (redirectUrlFromDifferentOrigin) {\n      throw invalidOriginException;\n    }\n    throw invalidRedirectException;\n  }\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = redirect => redirect.startsWith(\n// eslint-disable-next-line no-constant-binary-expression\nString(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = redirect => redirect.includes(String(window.location.hostname));\nconst isHttp = redirect => redirect.startsWith('http://');\nconst isHttps = redirect => redirect.startsWith('https://');\nexport { getRedirectUrl };","map":{"version":3,"names":["getRedirectUrl","redirects","preferredRedirectUrl","redirectUrl","find","redirect","invalidPreferredRedirectUrlException","redirectUrlFromTheSameOrigin","isSameOriginAndPathName","isTheSameDomain","redirectUrlFromDifferentOrigin","isHttps","isHttp","invalidOriginException","invalidRedirectException","startsWith","String","window","location","origin","pathname","includes","hostname"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/getRedirectUrl.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { invalidOriginException, invalidPreferredRedirectUrlException, invalidRedirectException, } from '../../../../errors/constants';\n/** @internal */\nexport function getRedirectUrl(redirects, preferredRedirectUrl) {\n    if (preferredRedirectUrl) {\n        const redirectUrl = redirects?.find(redirect => redirect === preferredRedirectUrl);\n        if (!redirectUrl) {\n            throw invalidPreferredRedirectUrlException;\n        }\n        return redirectUrl;\n    }\n    else {\n        const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n            redirects?.find(isTheSameDomain);\n        const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n        if (redirectUrlFromTheSameOrigin) {\n            return redirectUrlFromTheSameOrigin;\n        }\n        else if (redirectUrlFromDifferentOrigin) {\n            throw invalidOriginException;\n        }\n        throw invalidRedirectException;\n    }\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = (redirect) => redirect.startsWith(\n// eslint-disable-next-line no-constant-binary-expression\nString(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\nconst isHttp = (redirect) => redirect.startsWith('http://');\nconst isHttps = (redirect) => redirect.startsWith('https://');\n"],"mappings":";;AAAA;AACA;AAEA;AACO,SAASA,cAAcA,CAACC,SAAS,EAAEC,oBAAoB,EAAE;EAC5D,IAAIA,oBAAoB,EAAE;IACtB,MAAMC,WAAW,GAAGF,SAAS,EAAEG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,KAAKH,oBAAoB,CAAC;IAClF,IAAI,CAACC,WAAW,EAAE;MACd,MAAMG,oCAAoC;IACtD;IACQ,OAAOH,WAAW;EAC1B,CAAK,MACI;IACD,MAAMI,4BAA4B,GAAGN,SAAS,EAAEG,IAAI,CAACI,uBAAuB,CAAC,IACzEP,SAAS,EAAEG,IAAI,CAACK,eAAe,CAAC;IACpC,MAAMC,8BAA8B,GAAGT,SAAS,EAAEG,IAAI,CAACO,OAAO,CAAC,IAAIV,SAAS,EAAEG,IAAI,CAACQ,MAAM,CAAC;IAC1F,IAAIL,4BAA4B,EAAE;MAC9B,OAAOA,4BAA4B;IAC/C,CAAS,MACI,IAAIG,8BAA8B,EAAE;MACrC,MAAMG,sBAAsB;IACxC;IACQ,MAAMC,wBAAwB;EACtC;AACA;AACA;AACA,MAAMN,uBAAuB,GAAIH,QAAQ,IAAKA,QAAQ,CAACU,UAAU;AACjE;AACAC,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAGF,MAAM,CAACC,QAAQ,CAACE,QAAQ,IAAI,GAAG,CAAC,CAAC;AACjE;AACA,MAAMX,eAAe,GAAIJ,QAAQ,IAAKA,QAAQ,CAACgB,QAAQ,CAACL,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACI,QAAQ,CAAC,CAAC;AACzF,MAAMV,MAAM,GAAIP,QAAQ,IAAKA,QAAQ,CAACU,UAAU,CAAC,SAAS,CAAC;AAC3D,MAAMJ,OAAO,GAAIN,QAAQ,IAAKA,QAAQ,CAACU,UAAU,CAAC,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}