{"ast":null,"code":"import { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories/createCognitoUserPoolEndpointResolver.mjs';\nimport { getRegionFromUserPoolId } from '../parsers/regionParsers.mjs';\nimport { getAuthUserAgentValue } from '../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../common/AuthErrorStrings.mjs';\nimport '../../errors/types/validation.mjs';\nimport '../../providers/cognito/types/errors.mjs';\nimport { createDeleteWebAuthnCredentialClient } from '../factories/serviceClients/cognitoIdentityProvider/createDeleteWebAuthnCredentialClient.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function deleteWebAuthnCredential(amplify, input) {\n  const authConfig = amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await amplify.Auth.fetchAuthSession();\n  assertAuthTokens(tokens);\n  const deleteWebAuthnCredentialResult = createDeleteWebAuthnCredentialClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await deleteWebAuthnCredentialResult({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.DeleteWebAuthnCredential)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    CredentialId: input.credentialId\n  });\n}\nexport { deleteWebAuthnCredential };","map":{"version":3,"names":["deleteWebAuthnCredential","amplify","input","authConfig","getConfig","Auth","Cognito","assertTokenProviderConfig","userPoolEndpoint","userPoolId","tokens","fetchAuthSession","assertAuthTokens","deleteWebAuthnCredentialResult","createDeleteWebAuthnCredentialClient","endpointResolver","createCognitoUserPoolEndpointResolver","endpointOverride","region","getRegionFromUserPoolId","userAgentValue","getAuthUserAgentValue","AuthAction","DeleteWebAuthnCredential","AccessToken","accessToken","toString","CredentialId","credentialId"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/auth/src/foundation/apis/deleteWebAuthnCredential.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../providers/cognito/utils/types';\nimport { createCognitoUserPoolEndpointResolver } from '../../providers/cognito/factories';\nimport { getRegionFromUserPoolId } from '../parsers';\nimport { getAuthUserAgentValue } from '../../utils';\nimport { createDeleteWebAuthnCredentialClient } from '../factories/serviceClients/cognitoIdentityProvider';\nexport async function deleteWebAuthnCredential(amplify, input) {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await amplify.Auth.fetchAuthSession();\n    assertAuthTokens(tokens);\n    const deleteWebAuthnCredentialResult = createDeleteWebAuthnCredentialClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await deleteWebAuthnCredentialResult({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteWebAuthnCredential),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        CredentialId: input.credentialId,\n    });\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAOO,eAAeA,wBAAwBA,CAACC,OAAO,EAAEC,KAAK,EAAE;EAC3D,MAAMC,UAAU,GAAGF,OAAO,CAACG,SAAS,EAAE,CAACC,IAAI,EAAEC,OAAO;EACpDC,yBAAyB,CAACJ,UAAU,CAAC;EACrC,MAAM;IAAEK,gBAAgB;IAAEC;EAAU,CAAE,GAAGN,UAAU;EACnD,MAAM;IAAEO;EAAM,CAAE,GAAG,MAAMT,OAAO,CAACI,IAAI,CAACM,gBAAgB,EAAE;EACxDC,gBAAgB,CAACF,MAAM,CAAC;EACxB,MAAMG,8BAA8B,GAAGC,oCAAoC,CAAC;IACxEC,gBAAgB,EAAEC,qCAAqC,CAAC;MACpDC,gBAAgB,EAAET;IAC9B,CAAS;EACT,CAAK,CAAC;EACF,MAAMK,8BAA8B,CAAC;IACjCK,MAAM,EAAEC,uBAAuB,CAACV,UAAU,CAAC;IAC3CW,cAAc,EAAEC,qBAAqB,CAACC,UAAU,CAACC,wBAAwB;EACjF,CAAK,EAAE;IACCC,WAAW,EAAEd,MAAM,CAACe,WAAW,CAACC,QAAQ,EAAE;IAC1CC,YAAY,EAAEzB,KAAK,CAAC0B;EAC5B,CAAK,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}