{"ast":null,"code":"import { PlatformNotSupportedError } from '../errors/PlatformNotSupportedError.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SyncKeyValueStorage {\n  constructor(storage) {\n    this._storage = storage;\n  }\n  get storage() {\n    if (!this._storage) throw new PlatformNotSupportedError();\n    return this._storage;\n  }\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  setItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  getItem(key) {\n    return this.storage.getItem(key);\n  }\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  removeItem(key) {\n    this.storage.removeItem(key);\n  }\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  clear() {\n    this.storage.clear();\n  }\n}\nexport { SyncKeyValueStorage };","map":{"version":3,"names":["SyncKeyValueStorage","constructor","storage","_storage","PlatformNotSupportedError","setItem","key","value","getItem","removeItem","clear"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/core/src/storage/SyncKeyValueStorage.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PlatformNotSupportedError } from '../errors';\n/**\n * @internal\n */\nexport class SyncKeyValueStorage {\n    constructor(storage) {\n        this._storage = storage;\n    }\n    get storage() {\n        if (!this._storage)\n            throw new PlatformNotSupportedError();\n        return this._storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    setItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    getItem(key) {\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    removeItem(key) {\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    clear() {\n        this.storage.clear();\n    }\n}\n"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AACO,MAAMA,mBAAmB,CAAC;EAC7BC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EAC/B;EACI,IAAIA,OAAOA,CAAA,EAAG;IACV,IAAI,CAAC,IAAI,CAACC,QAAQ,EACd,MAAM,IAAIC,yBAAyB,EAAE;IACzC,OAAO,IAAI,CAACD,QAAQ;EAC5B;EACA;AACA;AACA;AACA;AACA;AACA;EACIE,OAAOA,CAACC,GAAG,EAAEC,KAAK,EAAE;IAChB,IAAI,CAACL,OAAO,CAACG,OAAO,CAACC,GAAG,EAAEC,KAAK,CAAC;EACxC;EACA;AACA;AACA;AACA;AACA;AACA;EACIC,OAAOA,CAACF,GAAG,EAAE;IACT,OAAO,IAAI,CAACJ,OAAO,CAACM,OAAO,CAACF,GAAG,CAAC;EACxC;EACA;AACA;AACA;AACA;AACA;EACIG,UAAUA,CAACH,GAAG,EAAE;IACZ,IAAI,CAACJ,OAAO,CAACO,UAAU,CAACH,GAAG,CAAC;EACpC;EACA;AACA;AACA;AACA;EACII,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACR,OAAO,CAACQ,KAAK,EAAE;EAC5B;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}