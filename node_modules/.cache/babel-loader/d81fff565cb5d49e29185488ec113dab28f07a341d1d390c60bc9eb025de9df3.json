{"ast":null,"code":"import { assertTokenProviderConfig, fetchAuthSession, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../../utils/types.mjs';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../../common/AuthErrorStrings.mjs';\nimport '../../../../errors/types/validation.mjs';\nimport '../../types/errors.mjs';\nimport { createGetUserClient } from '../../../../foundation/factories/serviceClients/cognitoIdentityProvider/createGetUserClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchUserAttributes = async amplify => {\n  const authConfig = amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession(amplify, {\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const getUser = createGetUserClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  const {\n    UserAttributes\n  } = await getUser({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes)\n  }, {\n    AccessToken: tokens.accessToken.toString()\n  });\n  return toAuthUserAttribute(UserAttributes);\n};\nexport { fetchUserAttributes };","map":{"version":3,"names":["fetchUserAttributes","amplify","authConfig","getConfig","Auth","Cognito","assertTokenProviderConfig","userPoolEndpoint","userPoolId","tokens","fetchAuthSession","forceRefresh","assertAuthTokens","getUser","createGetUserClient","endpointResolver","createCognitoUserPoolEndpointResolver","endpointOverride","UserAttributes","region","getRegionFromUserPoolId","userAgentValue","getAuthUserAgentValue","AuthAction","FetchUserAttributes","AccessToken","accessToken","toString","toAuthUserAttribute"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/auth/src/providers/cognito/apis/internal/fetchUserAttributes.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertTokenProviderConfig, fetchAuthSession, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../../foundation/parsers';\nimport { assertAuthTokens } from '../../utils/types';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers';\nimport { getAuthUserAgentValue } from '../../../../utils';\nimport { createGetUserClient } from '../../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../../factories';\nexport const fetchUserAttributes = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession(amplify, {\n        forceRefresh: false,\n    });\n    assertAuthTokens(tokens);\n    const getUser = createGetUserClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    const { UserAttributes } = await getUser({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return toAuthUserAttribute(UserAttributes);\n};\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAQY,MAACA,mBAAmB,GAAG,MAAOC,OAAO,IAAK;EAClD,MAAMC,UAAU,GAAGD,OAAO,CAACE,SAAS,EAAE,CAACC,IAAI,EAAEC,OAAO;EACpDC,yBAAyB,CAACJ,UAAU,CAAC;EACrC,MAAM;IAAEK,gBAAgB;IAAEC;EAAU,CAAE,GAAGN,UAAU;EACnD,MAAM;IAAEO;EAAM,CAAE,GAAG,MAAMC,gBAAgB,CAACT,OAAO,EAAE;IAC/CU,YAAY,EAAE;EACtB,CAAK,CAAC;EACFC,gBAAgB,CAACH,MAAM,CAAC;EACxB,MAAMI,OAAO,GAAGC,mBAAmB,CAAC;IAChCC,gBAAgB,EAAEC,qCAAqC,CAAC;MACpDC,gBAAgB,EAAEV;IAC9B,CAAS;EACT,CAAK,CAAC;EACF,MAAM;IAAEW;EAAc,CAAE,GAAG,MAAML,OAAO,CAAC;IACrCM,MAAM,EAAEC,uBAAuB,CAACZ,UAAU,CAAC;IAC3Ca,cAAc,EAAEC,qBAAqB,CAACC,UAAU,CAACC,mBAAmB;EAC5E,CAAK,EAAE;IACCC,WAAW,EAAEhB,MAAM,CAACiB,WAAW,CAACC,QAAQ;EAChD,CAAK,CAAC;EACF,OAAOC,mBAAmB,CAACV,cAAc,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}