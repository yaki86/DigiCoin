{"ast":null,"code":"var _jsxFileName = \"/Users/yaki/digi-coin/digi-coin-app/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signIn, signUp, signOut } from '@aws-amplify/auth';\nimport styles from './LoginForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm({\n  setIsLoggedIn\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLogin, setIsLogin] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const clearSession = async () => {\n      try {\n        await signOut();\n        setIsLoggedIn(false);\n      } catch (error) {\n        console.error('サインアウトエラー:', error);\n      }\n    };\n    clearSession();\n  }, [setIsLoggedIn]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      if (isLogin) {\n        const {\n          isSignedIn\n        } = await signIn({\n          username,\n          password\n        });\n        if (isSignedIn) {\n          setIsLoggedIn(true);\n          navigate('/send');\n        }\n      } else {\n        await signUp({\n          username,\n          password,\n          options: {\n            userAttributes: {\n              email: username\n            }\n          }\n        });\n        setError('登録が完了しました。ログインしてください。');\n        setIsLogin(true);\n      }\n    } catch (error) {\n      console.error('認証エラー:', error);\n      if (error.name === 'NotAuthorizedException') {\n        setError('ユーザー名またはパスワードが正しくありません。');\n      } else if (error.name === 'UserNotFoundException') {\n        setError('ユーザーが見つかりません。');\n      } else if (error.name === 'UserNotConfirmedException') {\n        setError('ユーザーの確認が完了していません。');\n      } else {\n        setError('認証中にエラーが発生しました。もう一度お試しください。');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: isLogin ? 'ログイン' : '新規登録'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: styles.label,\n            children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            className: styles.input,\n            autoComplete: isLogin ? \"username\" : \"new-username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: styles.label,\n            children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: styles.input,\n            autoComplete: isLogin ? \"current-password\" : \"new-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.submitButton,\n          children: isLogin ? 'ログイン' : '登録'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setIsLogin(!isLogin),\n          className: styles.toggleButton,\n          children: isLogin ? '新規登録はこちら' : 'ログインはこちら'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"FJ0cVNKOurPxRxBYBijuT1qfmoo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","signIn","signUp","signOut","styles","jsxDEV","_jsxDEV","LoginForm","setIsLoggedIn","_s","username","setUsername","password","setPassword","error","setError","isLogin","setIsLogin","navigate","clearSession","console","handleSubmit","e","preventDefault","isSignedIn","options","userAttributes","email","name","className","container","children","formContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","formGroup","htmlFor","label","type","id","value","onChange","target","required","input","autoComplete","submitButton","onClick","toggleButton","_c","$RefreshReg$"],"sources":["/Users/yaki/digi-coin/digi-coin-app/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signIn, signUp, signOut } from '@aws-amplify/auth';\nimport styles from './LoginForm.module.css';\n\nexport default function LoginForm({ setIsLoggedIn }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLogin, setIsLogin] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const clearSession = async () => {\n      try {\n        await signOut();\n        setIsLoggedIn(false);\n      } catch (error) {\n        console.error('サインアウトエラー:', error);\n      }\n    };\n    clearSession();\n  }, [setIsLoggedIn]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      if (isLogin) {\n        const { isSignedIn } = await signIn({\n          username,\n          password\n        });\n        \n        if (isSignedIn) {\n          setIsLoggedIn(true);\n          navigate('/send');\n        }\n      } else {\n        await signUp({\n          username,\n          password,\n          options: {\n            userAttributes: {\n              email: username\n            }\n          }\n        });\n        setError('登録が完了しました。ログインしてください。');\n        setIsLogin(true);\n      }\n    } catch (error) {\n      console.error('認証エラー:', error);\n      if (error.name === 'NotAuthorizedException') {\n        setError('ユーザー名またはパスワードが正しくありません。');\n      } else if (error.name === 'UserNotFoundException') {\n        setError('ユーザーが見つかりません。');\n      } else if (error.name === 'UserNotConfirmedException') {\n        setError('ユーザーの確認が完了していません。');\n      } else {\n        setError('認証中にエラーが発生しました。もう一度お試しください。');\n      }\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.formContainer}>\n        <h2 className={styles.title}>\n          {isLogin ? 'ログイン' : '新規登録'}\n        </h2>\n        {error && <p className={styles.error}>{error}</p>}\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <div className={styles.formGroup}>\n            <label htmlFor=\"username\" className={styles.label}>ユーザー名:</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n              className={styles.input}\n              autoComplete={isLogin ? \"username\" : \"new-username\"}\n            />\n          </div>\n          <div className={styles.formGroup}>\n            <label htmlFor=\"password\" className={styles.label}>パスワード:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              className={styles.input}\n              autoComplete={isLogin ? \"current-password\" : \"new-password\"}\n            />\n          </div>\n          <button type=\"submit\" className={styles.submitButton}>\n            {isLogin ? 'ログイン' : '登録'}\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => setIsLogin(!isLogin)}\n            className={styles.toggleButton}\n          >\n            {isLogin ? '新規登録はこちら' : 'ログインはこちら'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}