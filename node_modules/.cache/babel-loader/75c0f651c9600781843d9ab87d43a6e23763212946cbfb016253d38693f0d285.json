{"ast":null,"code":"import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\nimport { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\nimport { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\nimport { parseJsonError } from '../../clients/serde/json.mjs';\nimport { getAmplifyUserAgent } from '../../Platform/index.mjs';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'mobiletargeting';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = _ref => {\n  let {\n    region\n  } = _ref;\n  return {\n    url: new AmplifyUrl(`https://pinpoint.${region}.${getDnsSuffix(region)}`)\n  };\n};\n/**\n * @internal\n */\nconst defaultConfig = {\n  service: SERVICE_NAME,\n  endpointResolver,\n  retryDecider: getRetryDecider(parseJsonError),\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent()\n};\n/**\n * @internal\n */\nconst getSharedHeaders = () => ({\n  'content-type': 'application/json'\n});\nexport { defaultConfig, getSharedHeaders };","map":{"version":3,"names":["SERVICE_NAME","endpointResolver","_ref","region","url","AmplifyUrl","getDnsSuffix","defaultConfig","service","retryDecider","getRetryDecider","parseJsonError","computeDelay","jitteredBackoff","userAgentValue","getAmplifyUserAgent","getSharedHeaders"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/core/src/awsClients/pinpoint/base.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix } from '../../clients/endpoints';\nimport { getRetryDecider, jitteredBackoff, } from '../../clients/middleware/retry';\nimport { parseJsonError } from '../../clients/serde/json';\nimport { getAmplifyUserAgent } from '../../Platform';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'mobiletargeting';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://pinpoint.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n};\n/**\n * @internal\n */\nexport const getSharedHeaders = () => ({\n    'content-type': 'application/json',\n});\n"],"mappings":";;;;;;;AAAA;AACA;AAMA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,iBAAiB;AACtC;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAE,GAAAD,IAAA;EAAA,OAAM;IACtCE,GAAG,EAAE,IAAIC,UAAU,CAAC,oBAAoBF,MAAM,IAAIG,YAAY,CAACH,MAAM,CAAC,EAAE;EAC5E,CAAC;AAAA,CAAC;AACF;AACA;AACA;AACY,MAACI,aAAa,GAAG;EACzBC,OAAO,EAAER,YAAY;EACrBC,gBAAgB;EAChBQ,YAAY,EAAEC,eAAe,CAACC,cAAc,CAAC;EAC7CC,YAAY,EAAEC,eAAe;EAC7BC,cAAc,EAAEC,mBAAmB;AACvC;AACA;AACA;AACA;AACY,MAACC,gBAAgB,GAAGA,CAAA,MAAO;EACnC,cAAc,EAAE;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}