{"ast":null,"code":"import { Amplify } from '@aws-amplify/core';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst normalizeAuth = (explicitAuthMode, defaultAuthMode) => {\n  if (!explicitAuthMode) {\n    return defaultAuthMode;\n  }\n  if (explicitAuthMode === 'identityPool') {\n    return 'iam';\n  }\n  return explicitAuthMode;\n};\nconst configure = () => {\n  const config = Amplify.getConfig();\n  const eventsConfig = config.API?.Events;\n  if (!eventsConfig) {\n    throw new Error('Amplify configuration is missing. Have you called Amplify.configure()?');\n  }\n  const configAuthMode = normalizeAuth(eventsConfig.defaultAuthMode, 'apiKey');\n  const options = {\n    appSyncGraphqlEndpoint: eventsConfig.endpoint,\n    region: eventsConfig.region,\n    authenticationType: configAuthMode,\n    apiKey: eventsConfig.apiKey\n  };\n  return options;\n};\n/**\n * Event API expects and array of JSON strings\n *\n * @param events - JSON-serializable value or an array of values\n * @returns array of JSON strings\n */\nconst serializeEvents = events => {\n  if (Array.isArray(events)) {\n    return events.map((ev, idx) => {\n      const eventJson = JSON.stringify(ev);\n      if (eventJson === undefined) {\n        throw new Error(`Event must be a valid JSON value. Received ${ev} at index ${idx}`);\n      }\n      return eventJson;\n    });\n  }\n  const eventJson = JSON.stringify(events);\n  if (eventJson === undefined) {\n    throw new Error(`Event must be a valid JSON value. Received ${events}`);\n  }\n  return [eventJson];\n};\nexport { configure, normalizeAuth, serializeEvents };","map":{"version":3,"names":["normalizeAuth","explicitAuthMode","defaultAuthMode","configure","config","Amplify","getConfig","eventsConfig","API","Events","Error","configAuthMode","options","appSyncGraphqlEndpoint","endpoint","region","authenticationType","apiKey","serializeEvents","events","Array","isArray","map","ev","idx","eventJson","JSON","stringify","undefined"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/api-graphql/src/internals/events/utils.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify } from '@aws-amplify/core';\nexport const normalizeAuth = (explicitAuthMode, defaultAuthMode) => {\n    if (!explicitAuthMode) {\n        return defaultAuthMode;\n    }\n    if (explicitAuthMode === 'identityPool') {\n        return 'iam';\n    }\n    return explicitAuthMode;\n};\nexport const configure = () => {\n    const config = Amplify.getConfig();\n    const eventsConfig = config.API?.Events;\n    if (!eventsConfig) {\n        throw new Error('Amplify configuration is missing. Have you called Amplify.configure()?');\n    }\n    const configAuthMode = normalizeAuth(eventsConfig.defaultAuthMode, 'apiKey');\n    const options = {\n        appSyncGraphqlEndpoint: eventsConfig.endpoint,\n        region: eventsConfig.region,\n        authenticationType: configAuthMode,\n        apiKey: eventsConfig.apiKey,\n    };\n    return options;\n};\n/**\n * Event API expects and array of JSON strings\n *\n * @param events - JSON-serializable value or an array of values\n * @returns array of JSON strings\n */\nexport const serializeEvents = (events) => {\n    if (Array.isArray(events)) {\n        return events.map((ev, idx) => {\n            const eventJson = JSON.stringify(ev);\n            if (eventJson === undefined) {\n                throw new Error(`Event must be a valid JSON value. Received ${ev} at index ${idx}`);\n            }\n            return eventJson;\n        });\n    }\n    const eventJson = JSON.stringify(events);\n    if (eventJson === undefined) {\n        throw new Error(`Event must be a valid JSON value. Received ${events}`);\n    }\n    return [eventJson];\n};\n"],"mappings":";;AAAA;AACA;AAEY,MAACA,aAAa,GAAGA,CAACC,gBAAgB,EAAEC,eAAe,KAAK;EAChE,IAAI,CAACD,gBAAgB,EAAE;IACnB,OAAOC,eAAe;EAC9B;EACI,IAAID,gBAAgB,KAAK,cAAc,EAAE;IACrC,OAAO,KAAK;EACpB;EACI,OAAOA,gBAAgB;AAC3B;AACY,MAACE,SAAS,GAAGA,CAAA,KAAM;EAC3B,MAAMC,MAAM,GAAGC,OAAO,CAACC,SAAS,EAAE;EAClC,MAAMC,YAAY,GAAGH,MAAM,CAACI,GAAG,EAAEC,MAAM;EACvC,IAAI,CAACF,YAAY,EAAE;IACf,MAAM,IAAIG,KAAK,CAAC,wEAAwE,CAAC;EACjG;EACI,MAAMC,cAAc,GAAGX,aAAa,CAACO,YAAY,CAACL,eAAe,EAAE,QAAQ,CAAC;EAC5E,MAAMU,OAAO,GAAG;IACZC,sBAAsB,EAAEN,YAAY,CAACO,QAAQ;IAC7CC,MAAM,EAAER,YAAY,CAACQ,MAAM;IAC3BC,kBAAkB,EAAEL,cAAc;IAClCM,MAAM,EAAEV,YAAY,CAACU;EAC7B,CAAK;EACD,OAAOL,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACM,eAAe,GAAIC,MAAM,IAAK;EACvC,IAAIC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IACvB,OAAOA,MAAM,CAACG,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAK;MAC3B,MAAMC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACJ,EAAE,CAAC;MACpC,IAAIE,SAAS,KAAKG,SAAS,EAAE;QACzB,MAAM,IAAIlB,KAAK,CAAC,8CAA8Ca,EAAE,aAAaC,GAAG,EAAE,CAAC;MACnG;MACY,OAAOC,SAAS;IAC5B,CAAS,CAAC;EACV;EACI,MAAMA,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACR,MAAM,CAAC;EACxC,IAAIM,SAAS,KAAKG,SAAS,EAAE;IACzB,MAAM,IAAIlB,KAAK,CAAC,8CAA8CS,MAAM,EAAE,CAAC;EAC/E;EACI,OAAO,CAACM,SAAS,CAAC;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}