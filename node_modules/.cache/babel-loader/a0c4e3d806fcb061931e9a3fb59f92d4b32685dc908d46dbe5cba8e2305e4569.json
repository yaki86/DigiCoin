{"ast":null,"code":"import { listFactory } from '../operations/list.mjs';\nimport { convertItemToConversation } from './convertItemToConversation.mjs';\nimport { getCustomUserAgentDetails, AiAction } from './getCustomUserAgentDetails.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createListConversationsFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async input => {\n  const list = listFactory(client, modelIntrospection, conversationModel, getInternals, false, getCustomUserAgentDetails(AiAction.ListConversations));\n  const {\n    data,\n    nextToken,\n    errors\n  } = await list(input);\n  return {\n    data: data.map(datum => {\n      return convertItemToConversation(client, modelIntrospection, datum.id, datum.createdAt, datum.updatedAt, conversationRouteName, conversationMessageModel, getInternals, datum?.metadata, datum?.name);\n    }),\n    nextToken,\n    errors\n  };\n};\nexport { createListConversationsFunction };","map":{"version":3,"names":["createListConversationsFunction","client","modelIntrospection","conversationRouteName","conversationModel","conversationMessageModel","getInternals","input","list","listFactory","getCustomUserAgentDetails","AiAction","ListConversations","data","nextToken","errors","map","datum","convertItemToConversation","id","createdAt","updatedAt","metadata","name"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/data-schema/src/runtime/internals/ai/createListConversationsFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { listFactory } from '../operations/list';\nimport { convertItemToConversation } from './convertItemToConversation';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createListConversationsFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async (input) => {\n    const list = listFactory(client, modelIntrospection, conversationModel, getInternals, false, getCustomUserAgentDetails(AiAction.ListConversations));\n    const { data, nextToken, errors } = await list(input);\n    return {\n        data: data.map((datum) => {\n            return convertItemToConversation(client, modelIntrospection, datum.id, datum.createdAt, datum.updatedAt, conversationRouteName, conversationMessageModel, getInternals, datum?.metadata, datum?.name);\n        }),\n        nextToken,\n        errors,\n    };\n};\n"],"mappings":";;;;AAAA;AACA;AAIY,MAACA,+BAA+B,GAAGA,CAACC,MAAM,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,iBAAiB,EAAEC,wBAAwB,EAAEC,YAAY,KAAK,MAAOC,KAAK,IAAK;EAC9K,MAAMC,IAAI,GAAGC,WAAW,CAACR,MAAM,EAAEC,kBAAkB,EAAEE,iBAAiB,EAAEE,YAAY,EAAE,KAAK,EAAEI,yBAAyB,CAACC,QAAQ,CAACC,iBAAiB,CAAC,CAAC;EACnJ,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAE,GAAG,MAAMP,IAAI,CAACD,KAAK,CAAC;EACrD,OAAO;IACHM,IAAI,EAAEA,IAAI,CAACG,GAAG,CAAEC,KAAK,IAAK;MACtB,OAAOC,yBAAyB,CAACjB,MAAM,EAAEC,kBAAkB,EAAEe,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACG,SAAS,EAAEH,KAAK,CAACI,SAAS,EAAElB,qBAAqB,EAAEE,wBAAwB,EAAEC,YAAY,EAAEW,KAAK,EAAEK,QAAQ,EAAEL,KAAK,EAAEM,IAAI,CAAC;IACjN,CAAS,CAAC;IACFT,SAAS;IACTC;EACR,CAAK;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}