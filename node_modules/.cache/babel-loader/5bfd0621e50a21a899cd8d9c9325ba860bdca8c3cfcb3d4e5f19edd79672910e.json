{"ast":null,"code":"import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\nimport { validationErrorMap } from '../../../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthValidationErrorCode } from '../../../../errors/types/validation.mjs';\nimport { assertServiceError } from '../../../../errors/utils/assertServiceError.mjs';\nimport { SignUpException } from '../../../../providers/cognito/types/errors.mjs';\nimport { createUserPoolSerializer } from './shared/serde/createUserPoolSerializer.mjs';\nimport { cognitoUserPoolTransferHandler } from './shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createSignUpClientDeserializer = () => async response => {\n  if (response.statusCode >= 300) {\n    const error = await parseJsonError(response);\n    assertServiceError(error);\n    if (\n    // Missing Password Error\n    // 1 validation error detected: Value at 'password'failed to satisfy constraint: Member must not be null\n    error.name === SignUpException.InvalidParameterException && /'password'/.test(error.message) && /Member must not be null/.test(error.message)) {\n      const name = AuthValidationErrorCode.EmptySignUpPassword;\n      const {\n        message,\n        recoverySuggestion\n      } = validationErrorMap[name];\n      throw new AuthError({\n        name,\n        message,\n        recoverySuggestion\n      });\n    }\n    throw new AuthError({\n      name: error.name,\n      message: error.message\n    });\n  }\n  return parseJsonBody(response);\n};\nconst createSignUpClient = config => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SignUp'), createSignUpClientDeserializer(), {\n  ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n  ...config\n});\nexport { createSignUpClient, createSignUpClientDeserializer };","map":{"version":3,"names":["createSignUpClientDeserializer","response","statusCode","error","parseJsonError","assertServiceError","name","SignUpException","InvalidParameterException","test","message","AuthValidationErrorCode","EmptySignUpPassword","recoverySuggestion","validationErrorMap","AuthError","parseJsonBody","createSignUpClient","config","composeServiceApi","cognitoUserPoolTransferHandler","createUserPoolSerializer","DEFAULT_SERVICE_CLIENT_API_CONFIG"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/auth/src/foundation/factories/serviceClients/cognitoIdentityProvider/createSignUpClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { parseJsonBody, parseJsonError, } from '@aws-amplify/core/internals/aws-client-utils';\nimport { validationErrorMap } from '../../../../common/AuthErrorStrings';\nimport { AuthError } from '../../../../errors/AuthError';\nimport { AuthValidationErrorCode } from '../../../../errors/types/validation';\nimport { assertServiceError } from '../../../../errors/utils/assertServiceError';\nimport { SignUpException } from '../../../../providers/cognito/types/errors';\nimport { createUserPoolSerializer } from './shared/serde';\nimport { cognitoUserPoolTransferHandler } from './shared/handler';\nimport { DEFAULT_SERVICE_CLIENT_API_CONFIG } from './constants';\nexport const createSignUpClientDeserializer = () => async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        assertServiceError(error);\n        if (\n        // Missing Password Error\n        // 1 validation error detected: Value at 'password'failed to satisfy constraint: Member must not be null\n        error.name === SignUpException.InvalidParameterException &&\n            /'password'/.test(error.message) &&\n            /Member must not be null/.test(error.message)) {\n            const name = AuthValidationErrorCode.EmptySignUpPassword;\n            const { message, recoverySuggestion } = validationErrorMap[name];\n            throw new AuthError({\n                name,\n                message,\n                recoverySuggestion,\n            });\n        }\n        throw new AuthError({ name: error.name, message: error.message });\n    }\n    return parseJsonBody(response);\n};\nexport const createSignUpClient = (config) => composeServiceApi(cognitoUserPoolTransferHandler, createUserPoolSerializer('SignUp'), createSignUpClientDeserializer(), {\n    ...DEFAULT_SERVICE_CLIENT_API_CONFIG,\n    ...config,\n});\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AAWY,MAACA,8BAA8B,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACpE,IAAIA,QAAQ,CAACC,UAAU,IAAI,GAAG,EAAE;IAC5B,MAAMC,KAAK,GAAG,MAAMC,cAAc,CAACH,QAAQ,CAAC;IAC5CI,kBAAkB,CAACF,KAAK,CAAC;IACzB;IACR;IACA;IACQA,KAAK,CAACG,IAAI,KAAKC,eAAe,CAACC,yBAAyB,IACpD,YAAY,CAACC,IAAI,CAACN,KAAK,CAACO,OAAO,CAAC,IAChC,yBAAyB,CAACD,IAAI,CAACN,KAAK,CAACO,OAAO,CAAC,EAAE;MAC/C,MAAMJ,IAAI,GAAGK,uBAAuB,CAACC,mBAAmB;MACxD,MAAM;QAAEF,OAAO;QAAEG;MAAkB,CAAE,GAAGC,kBAAkB,CAACR,IAAI,CAAC;MAChE,MAAM,IAAIS,SAAS,CAAC;QAChBT,IAAI;QACJI,OAAO;QACPG;MAChB,CAAa,CAAC;IACd;IACQ,MAAM,IAAIE,SAAS,CAAC;MAAET,IAAI,EAAEH,KAAK,CAACG,IAAI;MAAEI,OAAO,EAAEP,KAAK,CAACO;IAAO,CAAE,CAAC;EACzE;EACI,OAAOM,aAAa,CAACf,QAAQ,CAAC;AAClC;AACY,MAACgB,kBAAkB,GAAIC,MAAM,IAAKC,iBAAiB,CAACC,8BAA8B,EAAEC,wBAAwB,CAAC,QAAQ,CAAC,EAAErB,8BAA8B,EAAE,EAAE;EAClK,GAAGsB,iCAAiC;EACpC,GAAGJ;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}