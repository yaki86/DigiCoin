{"ast":null,"code":"import { createCreateConversationFunction } from '../../ai/createCreateConversationFunction.mjs';\nimport { createGetConversationFunction } from '../../ai/createGetConversationFunction.mjs';\nimport { createListConversationsFunction } from '../../ai/createListConversationsFunction.mjs';\nimport { createDeleteConversationFunction } from '../../ai/createDeleteConversationFunction.mjs';\nimport { createUpdateConversationFunction } from '../../ai/createUpdateConversationFunction.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction generateConversationsProperty(client, apiGraphQLConfig, getInternals) {\n  const modelIntrospection = apiGraphQLConfig?.modelIntrospection;\n  // conversations will be absent from model intro schema if no conversation routes\n  // are present on the source schema.\n  if (!modelIntrospection?.conversations) {\n    return {};\n  }\n  const conversations = {};\n  for (const {\n    name,\n    conversation,\n    message,\n    models,\n    nonModels,\n    enums\n  } of Object.values(modelIntrospection.conversations)) {\n    const conversationModel = models[conversation.modelName];\n    const conversationMessageModel = models[message.modelName];\n    if (!conversationModel || !conversationMessageModel) {\n      return {};\n    }\n    const conversationModelIntrospection = {\n      ...modelIntrospection,\n      models: {\n        ...modelIntrospection.models,\n        ...models\n      },\n      nonModels: {\n        ...modelIntrospection.nonModels,\n        ...nonModels\n      },\n      enums: {\n        ...modelIntrospection.enums,\n        ...enums\n      }\n    };\n    conversations[name] = {\n      update: createUpdateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      create: createCreateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      get: createGetConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      delete: createDeleteConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n      list: createListConversationsFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals)\n    };\n  }\n  return conversations;\n}\nexport { generateConversationsProperty };","map":{"version":3,"names":["generateConversationsProperty","client","apiGraphQLConfig","getInternals","modelIntrospection","conversations","name","conversation","message","models","nonModels","enums","Object","values","conversationModel","modelName","conversationMessageModel","conversationModelIntrospection","update","createUpdateConversationFunction","create","createCreateConversationFunction","get","createGetConversationFunction","delete","createDeleteConversationFunction","list","createListConversationsFunction"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/data-schema/src/runtime/internals/utils/clientProperties/generateConversationsProperty.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createCreateConversationFunction } from '../../ai/createCreateConversationFunction';\nimport { createGetConversationFunction } from '../../ai/createGetConversationFunction';\nimport { createListConversationsFunction } from '../../ai/createListConversationsFunction';\nimport { createDeleteConversationFunction } from '../../ai/createDeleteConversationFunction';\nimport { createUpdateConversationFunction } from '../../ai/createUpdateConversationFunction';\nexport function generateConversationsProperty(client, apiGraphQLConfig, getInternals) {\n    const modelIntrospection = apiGraphQLConfig?.modelIntrospection;\n    // conversations will be absent from model intro schema if no conversation routes\n    // are present on the source schema.\n    if (!modelIntrospection?.conversations) {\n        return {};\n    }\n    const conversations = {};\n    for (const { name, conversation, message, models, nonModels, enums, } of Object.values(modelIntrospection.conversations)) {\n        const conversationModel = models[conversation.modelName];\n        const conversationMessageModel = models[message.modelName];\n        if (!conversationModel || !conversationMessageModel) {\n            return {};\n        }\n        const conversationModelIntrospection = {\n            ...modelIntrospection,\n            models: {\n                ...modelIntrospection.models,\n                ...models,\n            },\n            nonModels: {\n                ...modelIntrospection.nonModels,\n                ...nonModels,\n            },\n            enums: {\n                ...modelIntrospection.enums,\n                ...enums,\n            },\n        };\n        conversations[name] = {\n            update: createUpdateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            create: createCreateConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            get: createGetConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            delete: createDeleteConversationFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n            list: createListConversationsFunction(client, conversationModelIntrospection, name, conversationModel, conversationMessageModel, getInternals),\n        };\n    }\n    return conversations;\n}\n"],"mappings":";;;;;;AAAA;AACA;AAMO,SAASA,6BAA6BA,CAACC,MAAM,EAAEC,gBAAgB,EAAEC,YAAY,EAAE;EAClF,MAAMC,kBAAkB,GAAGF,gBAAgB,EAAEE,kBAAkB;EACnE;EACA;EACI,IAAI,CAACA,kBAAkB,EAAEC,aAAa,EAAE;IACpC,OAAO,EAAE;EACjB;EACI,MAAMA,aAAa,GAAG,EAAE;EACxB,KAAK,MAAM;IAAEC,IAAI;IAAEC,YAAY;IAAEC,OAAO;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAG,IAAIC,MAAM,CAACC,MAAM,CAACT,kBAAkB,CAACC,aAAa,CAAC,EAAE;IACtH,MAAMS,iBAAiB,GAAGL,MAAM,CAACF,YAAY,CAACQ,SAAS,CAAC;IACxD,MAAMC,wBAAwB,GAAGP,MAAM,CAACD,OAAO,CAACO,SAAS,CAAC;IAC1D,IAAI,CAACD,iBAAiB,IAAI,CAACE,wBAAwB,EAAE;MACjD,OAAO,EAAE;IACrB;IACQ,MAAMC,8BAA8B,GAAG;MACnC,GAAGb,kBAAkB;MACrBK,MAAM,EAAE;QACJ,GAAGL,kBAAkB,CAACK,MAAM;QAC5B,GAAGA;MACnB,CAAa;MACDC,SAAS,EAAE;QACP,GAAGN,kBAAkB,CAACM,SAAS;QAC/B,GAAGA;MACnB,CAAa;MACDC,KAAK,EAAE;QACH,GAAGP,kBAAkB,CAACO,KAAK;QAC3B,GAAGA;MACnB;IACA,CAAS;IACDN,aAAa,CAACC,IAAI,CAAC,GAAG;MAClBY,MAAM,EAAEC,gCAAgC,CAAClB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MACjJiB,MAAM,EAAEC,gCAAgC,CAACpB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MACjJmB,GAAG,EAAEC,6BAA6B,CAACtB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MAC3IqB,MAAM,EAAEC,gCAAgC,CAACxB,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY,CAAC;MACjJuB,IAAI,EAAEC,+BAA+B,CAAC1B,MAAM,EAAEgB,8BAA8B,EAAEX,IAAI,EAAEQ,iBAAiB,EAAEE,wBAAwB,EAAEb,YAAY;IACzJ,CAAS;EACT;EACI,OAAOE,aAAa;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}