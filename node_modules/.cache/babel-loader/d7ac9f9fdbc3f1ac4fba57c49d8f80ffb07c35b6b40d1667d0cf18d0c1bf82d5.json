{"ast":null,"code":"import { listFactory } from '../operations/list.mjs';\nimport { convertItemToConversationMessage } from './convertItemToConversationMessage.mjs';\nimport { getCustomUserAgentDetails, AiAction } from './getCustomUserAgentDetails.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createListMessagesFunction = (client, modelIntrospection, conversationId, conversationMessageModel, getInternals) => async input => {\n  const list = listFactory(client, modelIntrospection, conversationMessageModel, getInternals, false, getCustomUserAgentDetails(AiAction.ListMessages));\n  const {\n    data,\n    nextToken,\n    errors\n  } = await list({\n    ...input,\n    filter: {\n      conversationId: {\n        eq: conversationId\n      }\n    }\n  });\n  return {\n    data: data.map(item => convertItemToConversationMessage(item)),\n    nextToken,\n    errors\n  };\n};\nexport { createListMessagesFunction };","map":{"version":3,"names":["createListMessagesFunction","client","modelIntrospection","conversationId","conversationMessageModel","getInternals","input","list","listFactory","getCustomUserAgentDetails","AiAction","ListMessages","data","nextToken","errors","filter","eq","map","item","convertItemToConversationMessage"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/data-schema/src/runtime/internals/ai/createListMessagesFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { listFactory } from '../operations/list';\nimport { convertItemToConversationMessage } from './convertItemToConversationMessage';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createListMessagesFunction = (client, modelIntrospection, conversationId, conversationMessageModel, getInternals) => async (input) => {\n    const list = listFactory(client, modelIntrospection, conversationMessageModel, getInternals, false, getCustomUserAgentDetails(AiAction.ListMessages));\n    const { data, nextToken, errors } = await list({\n        ...input,\n        filter: { conversationId: { eq: conversationId } },\n    });\n    return {\n        data: data.map((item) => convertItemToConversationMessage(item)),\n        nextToken,\n        errors,\n    };\n};\n"],"mappings":";;;;AAAA;AACA;AAIY,MAACA,0BAA0B,GAAGA,CAACC,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,wBAAwB,EAAEC,YAAY,KAAK,MAAOC,KAAK,IAAK;EAC/I,MAAMC,IAAI,GAAGC,WAAW,CAACP,MAAM,EAAEC,kBAAkB,EAAEE,wBAAwB,EAAEC,YAAY,EAAE,KAAK,EAAEI,yBAAyB,CAACC,QAAQ,CAACC,YAAY,CAAC,CAAC;EACrJ,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAE,GAAG,MAAMP,IAAI,CAAC;IAC3C,GAAGD,KAAK;IACRS,MAAM,EAAE;MAAEZ,cAAc,EAAE;QAAEa,EAAE,EAAEb;MAAc;IAAE;EACxD,CAAK,CAAC;EACF,OAAO;IACHS,IAAI,EAAEA,IAAI,CAACK,GAAG,CAAEC,IAAI,IAAKC,gCAAgC,CAACD,IAAI,CAAC,CAAC;IAChEL,SAAS;IACTC;EACR,CAAK;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}