{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import App from'./App';import{Amplify}from'aws-amplify';// デバッグ用の環境変数チェック\nimport{jsx as _jsx}from\"react/jsx-runtime\";const envVars={region:process.env.REACT_APP_REGION,userPoolId:process.env.REACT_APP_USER_POOL_ID,userPoolClientId:process.env.REACT_APP_USER_POOL_CLIENT_ID,apiEndpoint:process.env.REACT_APP_API_ENDPOINT};console.log('設定値:',envVars);Object.entries(envVars).forEach(_ref=>{let[key,value]=_ref;if(!value){console.error(`環境変数が未設定です: ${key}`);}});// 基本設定\nconst config={Auth:{Cognito:{userPoolId:process.env.REACT_APP_USER_POOL_ID,userPoolClientId:process.env.REACT_APP_USER_POOL_CLIENT_ID,region:process.env.REACT_APP_REGION}},API:{REST:{default:{// APIの名前を'default'に変更\nendpoint:process.env.REACT_APP_API_ENDPOINT,region:process.env.REACT_APP_REGION}}}};// 単一の configure 呼び出し\nAmplify.configure(config);const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));","map":{"version":3,"names":["React","ReactDOM","App","Amplify","jsx","_jsx","envVars","region","process","env","REACT_APP_REGION","userPoolId","REACT_APP_USER_POOL_ID","userPoolClientId","REACT_APP_USER_POOL_CLIENT_ID","apiEndpoint","REACT_APP_API_ENDPOINT","console","log","Object","entries","forEach","_ref","key","value","error","config","Auth","Cognito","API","REST","default","endpoint","configure","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["/Users/yaki/digi-coin/digi-coin-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { Amplify } from 'aws-amplify';\n\n// デバッグ用の環境変数チェック\nconst envVars = {\n  region: process.env.REACT_APP_REGION,\n  userPoolId: process.env.REACT_APP_USER_POOL_ID,\n  userPoolClientId: process.env.REACT_APP_USER_POOL_CLIENT_ID,\n  apiEndpoint: process.env.REACT_APP_API_ENDPOINT\n};\n\nconsole.log('設定値:', envVars);\n\nObject.entries(envVars).forEach(([key, value]) => {\n  if (!value) {\n    console.error(`環境変数が未設定です: ${key}`);\n  }\n});\n\n// 基本設定\nconst config = {\n  Auth: {\n    Cognito: {\n      userPoolId: process.env.REACT_APP_USER_POOL_ID,\n      userPoolClientId: process.env.REACT_APP_USER_POOL_CLIENT_ID,\n      region: process.env.REACT_APP_REGION\n    }\n  },\n  API: {\n    REST: {\n      default: {  // APIの名前を'default'に変更\n        endpoint: process.env.REACT_APP_API_ENDPOINT,\n        region: process.env.REACT_APP_REGION\n      }\n    }\n  }\n};\n\n// 単一の configure 呼び出し\nAmplify.configure(config);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,OAAO,KAAQ,aAAa,CAErC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,OAAO,CAAG,CACdC,MAAM,CAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB,CACpCC,UAAU,CAAEH,OAAO,CAACC,GAAG,CAACG,sBAAsB,CAC9CC,gBAAgB,CAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B,CAC3DC,WAAW,CAAEP,OAAO,CAACC,GAAG,CAACO,sBAC3B,CAAC,CAEDC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEZ,OAAO,CAAC,CAE5Ba,MAAM,CAACC,OAAO,CAACd,OAAO,CAAC,CAACe,OAAO,CAACC,IAAA,EAAkB,IAAjB,CAACC,GAAG,CAAEC,KAAK,CAAC,CAAAF,IAAA,CAC3C,GAAI,CAACE,KAAK,CAAE,CACVP,OAAO,CAACQ,KAAK,CAAC,eAAeF,GAAG,EAAE,CAAC,CACrC,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAG,MAAM,CAAG,CACbC,IAAI,CAAE,CACJC,OAAO,CAAE,CACPjB,UAAU,CAAEH,OAAO,CAACC,GAAG,CAACG,sBAAsB,CAC9CC,gBAAgB,CAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B,CAC3DP,MAAM,CAAEC,OAAO,CAACC,GAAG,CAACC,gBACtB,CACF,CAAC,CACDmB,GAAG,CAAE,CACHC,IAAI,CAAE,CACJC,OAAO,CAAE,CAAG;AACVC,QAAQ,CAAExB,OAAO,CAACC,GAAG,CAACO,sBAAsB,CAC5CT,MAAM,CAAEC,OAAO,CAACC,GAAG,CAACC,gBACtB,CACF,CACF,CACF,CAAC,CAED;AACAP,OAAO,CAAC8B,SAAS,CAACP,MAAM,CAAC,CAEzB,KAAM,CAAAQ,IAAI,CAAGjC,QAAQ,CAACkC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTjC,IAAA,CAACL,KAAK,CAACuC,UAAU,EAAAC,QAAA,cACfnC,IAAA,CAACH,GAAG,GAAE,CAAC,CACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}