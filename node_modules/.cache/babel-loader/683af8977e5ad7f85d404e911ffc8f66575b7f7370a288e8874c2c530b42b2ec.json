{"ast":null,"code":"import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers/regionParsers.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '@aws-amplify/core/internals/aws-client-utils/composers';\nimport '@aws-amplify/core/internals/aws-client-utils';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/shared/handler/cognitoUserPoolTransferHandler.mjs';\nimport '../../../foundation/factories/serviceClients/cognitoIdentityProvider/constants.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\nimport '../../../errors/types/validation.mjs';\nimport '../types/errors.mjs';\nimport { createDeleteUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider/createDeleteUserAttributesClient.mjs';\nimport { createCognitoUserPoolEndpointResolver } from '../factories/createCognitoUserPoolEndpointResolver.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function deleteUserAttributes(input) {\n  const authConfig = Amplify.getConfig().Auth?.Cognito;\n  assertTokenProviderConfig(authConfig);\n  const {\n    userAttributeKeys\n  } = input;\n  const {\n    userPoolEndpoint,\n    userPoolId\n  } = authConfig;\n  const {\n    tokens\n  } = await fetchAuthSession({\n    forceRefresh: false\n  });\n  assertAuthTokens(tokens);\n  const deleteUserAttributesClient = createDeleteUserAttributesClient({\n    endpointResolver: createCognitoUserPoolEndpointResolver({\n      endpointOverride: userPoolEndpoint\n    })\n  });\n  await deleteUserAttributesClient({\n    region: getRegionFromUserPoolId(userPoolId),\n    userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes)\n  }, {\n    AccessToken: tokens.accessToken.toString(),\n    UserAttributeNames: userAttributeKeys\n  });\n}\nexport { deleteUserAttributes };","map":{"version":3,"names":["deleteUserAttributes","input","authConfig","Amplify","getConfig","Auth","Cognito","assertTokenProviderConfig","userAttributeKeys","userPoolEndpoint","userPoolId","tokens","fetchAuthSession","forceRefresh","assertAuthTokens","deleteUserAttributesClient","createDeleteUserAttributesClient","endpointResolver","createCognitoUserPoolEndpointResolver","endpointOverride","region","getRegionFromUserPoolId","userAgentValue","getAuthUserAgentValue","AuthAction","DeleteUserAttributes","AccessToken","accessToken","toString","UserAttributeNames"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/auth/src/providers/cognito/apis/deleteUserAttributes.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getRegionFromUserPoolId } from '../../../foundation/parsers';\nimport { assertAuthTokens } from '../utils/types';\nimport { getAuthUserAgentValue } from '../../../utils';\nimport { createDeleteUserAttributesClient } from '../../../foundation/factories/serviceClients/cognitoIdentityProvider';\nimport { createCognitoUserPoolEndpointResolver } from '../factories';\n/**\n * Deletes user attributes.\n *\n * @param input -  The DeleteUserAttributesInput object\n * @throws  -{@link DeleteUserAttributesException } - Thrown due to invalid attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nexport async function deleteUserAttributes(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userAttributeKeys } = input;\n    const { userPoolEndpoint, userPoolId } = authConfig;\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const deleteUserAttributesClient = createDeleteUserAttributesClient({\n        endpointResolver: createCognitoUserPoolEndpointResolver({\n            endpointOverride: userPoolEndpoint,\n        }),\n    });\n    await deleteUserAttributesClient({\n        region: getRegionFromUserPoolId(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.DeleteUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        UserAttributeNames: userAttributeKeys,\n    });\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeA,oBAAoBA,CAACC,KAAK,EAAE;EAC9C,MAAMC,UAAU,GAAGC,OAAO,CAACC,SAAS,EAAE,CAACC,IAAI,EAAEC,OAAO;EACpDC,yBAAyB,CAACL,UAAU,CAAC;EACrC,MAAM;IAAEM;EAAiB,CAAE,GAAGP,KAAK;EACnC,MAAM;IAAEQ,gBAAgB;IAAEC;EAAU,CAAE,GAAGR,UAAU;EACnD,MAAM;IAAES;EAAM,CAAE,GAAG,MAAMC,gBAAgB,CAAC;IAAEC,YAAY,EAAE;EAAK,CAAE,CAAC;EAClEC,gBAAgB,CAACH,MAAM,CAAC;EACxB,MAAMI,0BAA0B,GAAGC,gCAAgC,CAAC;IAChEC,gBAAgB,EAAEC,qCAAqC,CAAC;MACpDC,gBAAgB,EAAEV;IAC9B,CAAS;EACT,CAAK,CAAC;EACF,MAAMM,0BAA0B,CAAC;IAC7BK,MAAM,EAAEC,uBAAuB,CAACX,UAAU,CAAC;IAC3CY,cAAc,EAAEC,qBAAqB,CAACC,UAAU,CAACC,oBAAoB;EAC7E,CAAK,EAAE;IACCC,WAAW,EAAEf,MAAM,CAACgB,WAAW,CAACC,QAAQ,EAAE;IAC1CC,kBAAkB,EAAErB;EAC5B,CAAK,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}