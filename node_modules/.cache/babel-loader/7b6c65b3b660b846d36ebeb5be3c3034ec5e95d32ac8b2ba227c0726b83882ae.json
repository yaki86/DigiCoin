{"ast":null,"code":"import { assertPasskeyError, PasskeyErrorCode } from '../errors.mjs';\nexport { assertValidCredentialCreationOptions } from './shared.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential) {\n  assertPasskeyError(credential && credential instanceof PublicKeyCredential && credential.response instanceof AuthenticatorAttestationResponse, PasskeyErrorCode.PasskeyRegistrationFailed);\n}\nfunction assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential) {\n  assertPasskeyError(credential && credential instanceof PublicKeyCredential && credential.response instanceof AuthenticatorAssertionResponse, PasskeyErrorCode.PasskeyRetrievalFailed);\n}\nexport { assertCredentialIsPkcWithAuthenticatorAssertionResponse, assertCredentialIsPkcWithAuthenticatorAttestationResponse };","map":{"version":3,"names":["assertCredentialIsPkcWithAuthenticatorAttestationResponse","credential","assertPasskeyError","PublicKeyCredential","response","AuthenticatorAttestationResponse","PasskeyErrorCode","PasskeyRegistrationFailed","assertCredentialIsPkcWithAuthenticatorAssertionResponse","AuthenticatorAssertionResponse","PasskeyRetrievalFailed"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/auth/src/client/utils/passkey/types/index.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { PasskeyErrorCode, assertPasskeyError } from '../errors';\n/**\n * Passkey Create Types\n */\nexport { assertValidCredentialCreationOptions, } from './shared';\nexport function assertCredentialIsPkcWithAuthenticatorAttestationResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAttestationResponse, PasskeyErrorCode.PasskeyRegistrationFailed);\n}\nexport function assertCredentialIsPkcWithAuthenticatorAssertionResponse(credential) {\n    assertPasskeyError(credential &&\n        credential instanceof PublicKeyCredential &&\n        credential.response instanceof AuthenticatorAssertionResponse, PasskeyErrorCode.PasskeyRetrievalFailed);\n}\n"],"mappings":";;;AAAA;AACA;AAMO,SAASA,yDAAyDA,CAACC,UAAU,EAAE;EAClFC,kBAAkB,CAACD,UAAU,IACzBA,UAAU,YAAYE,mBAAmB,IACzCF,UAAU,CAACG,QAAQ,YAAYC,gCAAgC,EAAEC,gBAAgB,CAACC,yBAAyB,CAAC;AACpH;AACO,SAASC,uDAAuDA,CAACP,UAAU,EAAE;EAChFC,kBAAkB,CAACD,UAAU,IACzBA,UAAU,YAAYE,mBAAmB,IACzCF,UAAU,CAACG,QAAQ,YAAYK,8BAA8B,EAAEH,gBAAgB,CAACI,sBAAsB,CAAC;AAC/G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}