{"ast":null,"code":"import { createListMessagesFunction } from './createListMessagesFunction.mjs';\nimport { createOnStreamEventFunction } from './createOnStreamEventFunction.mjs';\nimport { createSendMessageFunction } from './createSendMessageFunction.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst convertItemToConversation = (client, modelIntrospection, conversationId, conversationCreatedAt, conversationUpdatedAt, conversationRouteName, conversationMessageModel, getInternals, conversationMetadata, conversationName) => {\n  if (!conversationId) {\n    throw new Error(`An error occurred converting a ${conversationRouteName} conversation: Missing ID`);\n  }\n  return {\n    id: conversationId,\n    createdAt: conversationCreatedAt,\n    updatedAt: conversationUpdatedAt,\n    metadata: conversationMetadata,\n    name: conversationName,\n    onStreamEvent: createOnStreamEventFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n    sendMessage: createSendMessageFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n    listMessages: createListMessagesFunction(client, modelIntrospection, conversationId, conversationMessageModel, getInternals)\n  };\n};\nexport { convertItemToConversation };","map":{"version":3,"names":["convertItemToConversation","client","modelIntrospection","conversationId","conversationCreatedAt","conversationUpdatedAt","conversationRouteName","conversationMessageModel","getInternals","conversationMetadata","conversationName","Error","id","createdAt","updatedAt","metadata","name","onStreamEvent","createOnStreamEventFunction","sendMessage","createSendMessageFunction","listMessages","createListMessagesFunction"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/data-schema/src/runtime/internals/ai/convertItemToConversation.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { createListMessagesFunction } from './createListMessagesFunction';\nimport { createOnStreamEventFunction } from './createOnStreamEventFunction';\nimport { createSendMessageFunction } from './createSendMessageFunction';\nexport const convertItemToConversation = (client, modelIntrospection, conversationId, conversationCreatedAt, conversationUpdatedAt, conversationRouteName, conversationMessageModel, getInternals, conversationMetadata, conversationName) => {\n    if (!conversationId) {\n        throw new Error(`An error occurred converting a ${conversationRouteName} conversation: Missing ID`);\n    }\n    return {\n        id: conversationId,\n        createdAt: conversationCreatedAt,\n        updatedAt: conversationUpdatedAt,\n        metadata: conversationMetadata,\n        name: conversationName,\n        onStreamEvent: createOnStreamEventFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n        sendMessage: createSendMessageFunction(client, modelIntrospection, conversationId, conversationRouteName, getInternals),\n        listMessages: createListMessagesFunction(client, modelIntrospection, conversationId, conversationMessageModel, getInternals),\n    };\n};\n"],"mappings":";;;;AAAA;AACA;AAIY,MAACA,yBAAyB,GAAGA,CAACC,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,qBAAqB,EAAEC,wBAAwB,EAAEC,YAAY,EAAEC,oBAAoB,EAAEC,gBAAgB,KAAK;EAC1O,IAAI,CAACP,cAAc,EAAE;IACjB,MAAM,IAAIQ,KAAK,CAAC,kCAAkCL,qBAAqB,2BAA2B,CAAC;EAC3G;EACI,OAAO;IACHM,EAAE,EAAET,cAAc;IAClBU,SAAS,EAAET,qBAAqB;IAChCU,SAAS,EAAET,qBAAqB;IAChCU,QAAQ,EAAEN,oBAAoB;IAC9BO,IAAI,EAAEN,gBAAgB;IACtBO,aAAa,EAAEC,2BAA2B,CAACjB,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEG,qBAAqB,EAAEE,YAAY,CAAC;IAC3HW,WAAW,EAAEC,yBAAyB,CAACnB,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEG,qBAAqB,EAAEE,YAAY,CAAC;IACvHa,YAAY,EAAEC,0BAA0B,CAACrB,MAAM,EAAEC,kBAAkB,EAAEC,cAAc,EAAEI,wBAAwB,EAAEC,YAAY;EACnI,CAAK;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}