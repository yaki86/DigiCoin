{"ast":null,"code":"import { getFactory } from '../operations/get.mjs';\nimport { convertItemToConversation } from './convertItemToConversation.mjs';\nimport { getCustomUserAgentDetails, AiAction } from './getCustomUserAgentDetails.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createUpdateConversationFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async _ref => {\n  let {\n    id,\n    metadata: metadataObject,\n    name\n  } = _ref;\n  const metadata = JSON.stringify(metadataObject);\n  const updateOperation = getFactory(client, modelIntrospection, conversationModel, 'UPDATE', getInternals, false, getCustomUserAgentDetails(AiAction.UpdateConversation));\n  const {\n    data,\n    errors\n  } = await updateOperation({\n    id,\n    metadata,\n    name\n  });\n  return {\n    data: data ? convertItemToConversation(client, modelIntrospection, data?.id, data?.createdAt, data?.updatedAt, conversationRouteName, conversationMessageModel, getInternals, data?.metadata, data?.name) : data,\n    errors\n  };\n};\nexport { createUpdateConversationFunction };","map":{"version":3,"names":["createUpdateConversationFunction","client","modelIntrospection","conversationRouteName","conversationModel","conversationMessageModel","getInternals","_ref","id","metadata","metadataObject","name","JSON","stringify","updateOperation","getFactory","getCustomUserAgentDetails","AiAction","UpdateConversation","data","errors","convertItemToConversation","createdAt","updatedAt"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/data-schema/src/runtime/internals/ai/createUpdateConversationFunction.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getFactory } from '../operations/get';\nimport { convertItemToConversation } from './convertItemToConversation';\nimport { AiAction, getCustomUserAgentDetails, } from './getCustomUserAgentDetails';\nexport const createUpdateConversationFunction = (client, modelIntrospection, conversationRouteName, conversationModel, conversationMessageModel, getInternals) => async ({ id, metadata: metadataObject, name }) => {\n    const metadata = JSON.stringify(metadataObject);\n    const updateOperation = getFactory(client, modelIntrospection, conversationModel, 'UPDATE', getInternals, false, getCustomUserAgentDetails(AiAction.UpdateConversation));\n    const { data, errors } = await updateOperation({ id, metadata, name });\n    return {\n        data: data\n            ? convertItemToConversation(client, modelIntrospection, data?.id, data?.createdAt, data?.updatedAt, conversationRouteName, conversationMessageModel, getInternals, data?.metadata, data?.name)\n            : data,\n        errors,\n    };\n};\n"],"mappings":";;;;AAAA;AACA;AAIY,MAACA,gCAAgC,GAAGA,CAACC,MAAM,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,iBAAiB,EAAEC,wBAAwB,EAAEC,YAAY,KAAK,MAAAC,IAAA,IAAkD;EAAA,IAA3C;IAAEC,EAAE;IAAEC,QAAQ,EAAEC,cAAc;IAAEC;EAAI,CAAE,GAAAJ,IAAA;EAC3M,MAAME,QAAQ,GAAGG,IAAI,CAACC,SAAS,CAACH,cAAc,CAAC;EAC/C,MAAMI,eAAe,GAAGC,UAAU,CAACd,MAAM,EAAEC,kBAAkB,EAAEE,iBAAiB,EAAE,QAAQ,EAAEE,YAAY,EAAE,KAAK,EAAEU,yBAAyB,CAACC,QAAQ,CAACC,kBAAkB,CAAC,CAAC;EACxK,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAE,GAAG,MAAMN,eAAe,CAAC;IAAEN,EAAE;IAAEC,QAAQ;IAAEE;EAAI,CAAE,CAAC;EACtE,OAAO;IACHQ,IAAI,EAAEA,IAAI,GACJE,yBAAyB,CAACpB,MAAM,EAAEC,kBAAkB,EAAEiB,IAAI,EAAEX,EAAE,EAAEW,IAAI,EAAEG,SAAS,EAAEH,IAAI,EAAEI,SAAS,EAAEpB,qBAAqB,EAAEE,wBAAwB,EAAEC,YAAY,EAAEa,IAAI,EAAEV,QAAQ,EAAEU,IAAI,EAAER,IAAI,CAAC,GAC5LQ,IAAI;IACVC;EACR,CAAK;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}