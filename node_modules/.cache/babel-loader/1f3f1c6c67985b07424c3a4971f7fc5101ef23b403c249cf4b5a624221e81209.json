{"ast":null,"code":"import { ConsoleLogger } from '@aws-amplify/core';\nimport '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from './errors/assertValidationError.mjs';\nimport { APIValidationErrorCode } from './errors/validation.mjs';\nimport 'graphql';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('GraphQLAPI resolveConfig');\n/**\n * @internal\n */\nconst resolveConfig = amplify => {\n  const config = amplify.getConfig();\n  if (!config.API?.GraphQL) {\n    logger.warn('The API configuration is missing. This is likely due to Amplify.configure() not being called prior to generateClient().');\n  }\n  const {\n    apiKey,\n    customEndpoint,\n    customEndpointRegion,\n    defaultAuthMode,\n    endpoint,\n    region\n  } = config.API?.GraphQL ?? {};\n  // TODO: re-enable when working in all test environments:\n  // assertValidationError(!!endpoint, APIValidationErrorCode.NoEndpoint);\n  assertValidationError(!(!customEndpoint && customEndpointRegion), APIValidationErrorCode.NoCustomEndpoint);\n  return {\n    apiKey,\n    customEndpoint,\n    customEndpointRegion,\n    defaultAuthMode,\n    endpoint,\n    region\n  };\n};\nexport { resolveConfig };","map":{"version":3,"names":["logger","ConsoleLogger","resolveConfig","amplify","config","getConfig","API","GraphQL","warn","apiKey","customEndpoint","customEndpointRegion","defaultAuthMode","endpoint","region","assertValidationError","APIValidationErrorCode","NoCustomEndpoint"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/api-graphql/src/utils/resolveConfig.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { APIValidationErrorCode, assertValidationError } from './errors';\nconst logger = new ConsoleLogger('GraphQLAPI resolveConfig');\n/**\n * @internal\n */\nexport const resolveConfig = (amplify) => {\n    const config = amplify.getConfig();\n    if (!config.API?.GraphQL) {\n        logger.warn('The API configuration is missing. This is likely due to Amplify.configure() not being called prior to generateClient().');\n    }\n    const { apiKey, customEndpoint, customEndpointRegion, defaultAuthMode, endpoint, region, } = config.API?.GraphQL ?? {};\n    // TODO: re-enable when working in all test environments:\n    // assertValidationError(!!endpoint, APIValidationErrorCode.NoEndpoint);\n    assertValidationError(!(!customEndpoint && customEndpointRegion), APIValidationErrorCode.NoCustomEndpoint);\n    return {\n        apiKey,\n        customEndpoint,\n        customEndpointRegion,\n        defaultAuthMode,\n        endpoint,\n        region,\n    };\n};\n"],"mappings":";;;;;;AAAA;AACA;AAGA,MAAMA,MAAM,GAAG,IAAIC,aAAa,CAAC,0BAA0B,CAAC;AAC5D;AACA;AACA;AACY,MAACC,aAAa,GAAIC,OAAO,IAAK;EACtC,MAAMC,MAAM,GAAGD,OAAO,CAACE,SAAS,EAAE;EAClC,IAAI,CAACD,MAAM,CAACE,GAAG,EAAEC,OAAO,EAAE;IACtBP,MAAM,CAACQ,IAAI,CAAC,yHAAyH,CAAC;EAC9I;EACI,MAAM;IAAEC,MAAM;IAAEC,cAAc;IAAEC,oBAAoB;IAAEC,eAAe;IAAEC,QAAQ;IAAEC;EAAM,CAAG,GAAGV,MAAM,CAACE,GAAG,EAAEC,OAAO,IAAI,EAAE;EAC1H;EACA;EACIQ,qBAAqB,CAAC,EAAE,CAACL,cAAc,IAAIC,oBAAoB,CAAC,EAAEK,sBAAsB,CAACC,gBAAgB,CAAC;EAC1G,OAAO;IACHR,MAAM;IACNC,cAAc;IACdC,oBAAoB;IACpBC,eAAe;IACfC,QAAQ;IACRC;EACR,CAAK;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}