{"ast":null,"code":"import { assertTokenProviderConfig, assertOAuthConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { completeOAuthFlow } from './completeOAuthFlow.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\nimport { handleFailure } from './handleFailure.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attemptCompleteOAuthFlow = async authConfig => {\n  try {\n    assertTokenProviderConfig(authConfig);\n    assertOAuthConfig(authConfig);\n    oAuthStore.setAuthConfig(authConfig);\n  } catch (_) {\n    // no-op\n    // This should not happen as Amplify singleton checks the oauth config key\n    // unless the oauth config object doesn't contain required properties\n    return;\n  }\n  // No inflight OAuth\n  if (!(await oAuthStore.loadOAuthInFlight())) {\n    return;\n  }\n  try {\n    const currentUrl = window.location.href;\n    const {\n      loginWith,\n      userPoolClientId\n    } = authConfig;\n    const {\n      domain,\n      redirectSignIn,\n      responseType\n    } = loginWith.oauth;\n    const redirectUri = getRedirectUrl(redirectSignIn);\n    await completeOAuthFlow({\n      currentUrl,\n      clientId: userPoolClientId,\n      domain,\n      redirectUri,\n      responseType,\n      userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect)\n    });\n  } catch (err) {\n    await handleFailure(err);\n  }\n};\nexport { attemptCompleteOAuthFlow };","map":{"version":3,"names":["attemptCompleteOAuthFlow","authConfig","assertTokenProviderConfig","assertOAuthConfig","oAuthStore","setAuthConfig","_","loadOAuthInFlight","currentUrl","window","location","href","loginWith","userPoolClientId","domain","redirectSignIn","responseType","oauth","redirectUri","getRedirectUrl","completeOAuthFlow","clientId","userAgentValue","getAuthUserAgentValue","AuthAction","SignInWithRedirect","err","handleFailure"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/auth/src/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AuthAction, assertOAuthConfig, assertTokenProviderConfig, } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../../utils';\nimport { oAuthStore } from './oAuthStore';\nimport { completeOAuthFlow } from './completeOAuthFlow';\nimport { getRedirectUrl } from './getRedirectUrl';\nimport { handleFailure } from './handleFailure';\nexport const attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n"],"mappings":";;;;;;;AAAA;AACA;AAOY,MAACA,wBAAwB,GAAG,MAAOC,UAAU,IAAK;EAC1D,IAAI;IACAC,yBAAyB,CAACD,UAAU,CAAC;IACrCE,iBAAiB,CAACF,UAAU,CAAC;IAC7BG,UAAU,CAACC,aAAa,CAACJ,UAAU,CAAC;EAC5C,CAAK,CACD,OAAOK,CAAC,EAAE;IACd;IACA;IACA;IACQ;EACR;EACA;EACI,IAAI,EAAE,MAAMF,UAAU,CAACG,iBAAiB,EAAE,CAAC,EAAE;IACzC;EACR;EACI,IAAI;IACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI;IACvC,MAAM;MAAEC,SAAS;MAAEC;IAAgB,CAAE,GAAGZ,UAAU;IAClD,MAAM;MAAEa,MAAM;MAAEC,cAAc;MAAEC;IAAY,CAAE,GAAGJ,SAAS,CAACK,KAAK;IAChE,MAAMC,WAAW,GAAGC,cAAc,CAACJ,cAAc,CAAC;IAClD,MAAMK,iBAAiB,CAAC;MACpBZ,UAAU;MACVa,QAAQ,EAAER,gBAAgB;MAC1BC,MAAM;MACNI,WAAW;MACXF,YAAY;MACZM,cAAc,EAAEC,qBAAqB,CAACC,UAAU,CAACC,kBAAkB;IAC/E,CAAS,CAAC;EACV,CAAK,CACD,OAAOC,GAAG,EAAE;IACR,MAAMC,aAAa,CAACD,GAAG,CAAC;EAChC;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}