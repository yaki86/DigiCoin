{"ast":null,"code":"import { Hub } from '@aws-amplify/core';\nimport { addSchemaToClient } from '@aws-amplify/data-schema/runtime';\nimport { __amplify, __authMode, __authToken, __apiKey, __endpoint, __headers, getInternals } from '../types/index.mjs';\nimport { isApiGraphQLConfig } from './utils/runtimeTypeGuards/isApiGraphQLProviderConfig.mjs';\nimport { isConfigureEventWithResourceConfig } from './utils/runtimeTypeGuards/isConfigureEventWithResourceConfig.mjs';\nimport { graphql, cancel, isCancelError } from './v6.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n *\n * Creates a client that can be used to make GraphQL requests, using a provided `AmplifyClassV6`\n * compatible context object for config and auth fetching.\n *\n * @param params\n * @returns\n */\nfunction generateClient(params) {\n  const client = {\n    [__amplify]: params.amplify,\n    [__authMode]: params.authMode,\n    [__authToken]: params.authToken,\n    [__apiKey]: 'apiKey' in params ? params.apiKey : undefined,\n    [__endpoint]: 'endpoint' in params ? params.endpoint : undefined,\n    [__headers]: params.headers,\n    graphql,\n    cancel,\n    isCancelError,\n    models: emptyProperty,\n    enums: emptyProperty,\n    queries: emptyProperty,\n    mutations: emptyProperty,\n    subscriptions: emptyProperty\n  };\n  const apiGraphqlConfig = params.amplify.getConfig().API?.GraphQL;\n  if (client[__endpoint]) {\n    if (!client[__authMode]) {\n      throw new Error('generateClient() requires an explicit `authMode` when `endpoint` is provided.');\n    }\n    if (client[__authMode] === 'apiKey' && !client[__apiKey]) {\n      throw new Error(\"generateClient() requires an explicit `apiKey` when `endpoint` is provided and `authMode = 'apiKey'`.\");\n    }\n  }\n  if (!client[__endpoint]) {\n    if (isApiGraphQLConfig(apiGraphqlConfig)) {\n      addSchemaToClient(client, apiGraphqlConfig, getInternals);\n    } else {\n      // This happens when the `Amplify.configure()` call gets evaluated after the `generateClient()` call.\n      //\n      // Cause: when the `generateClient()` and the `Amplify.configure()` calls are located in\n      // different source files, script bundlers may randomly arrange their orders in the production\n      // bundle.\n      //\n      // With the current implementation, the `client.models` instance created by `generateClient()`\n      // will be rebuilt on every `Amplify.configure()` call that's provided with a valid GraphQL\n      // provider configuration.\n      //\n      // TODO: revisit, and reverify this approach when enabling multiple clients for multi-endpoints\n      // configuration.\n      generateModelsPropertyOnAmplifyConfigure(client);\n    }\n  }\n  return client;\n}\nconst generateModelsPropertyOnAmplifyConfigure = clientRef => {\n  Hub.listen('core', coreEvent => {\n    if (!isConfigureEventWithResourceConfig(coreEvent.payload)) {\n      return;\n    }\n    const apiGraphQLConfig = coreEvent.payload.data.API?.GraphQL;\n    if (isApiGraphQLConfig(apiGraphQLConfig)) {\n      addSchemaToClient(clientRef, apiGraphQLConfig, getInternals);\n    }\n  });\n};\nconst emptyProperty = new Proxy({}, {\n  get() {\n    throw new Error('Client could not be generated. This is likely due to `Amplify.configure()` not being called prior to `generateClient()` or because the configuration passed to `Amplify.configure()` is missing GraphQL provider configuration.');\n  }\n});\nexport { generateClient };","map":{"version":3,"names":["generateClient","params","client","__amplify","amplify","__authMode","authMode","__authToken","authToken","__apiKey","apiKey","undefined","__endpoint","endpoint","__headers","headers","graphql","cancel","isCancelError","models","emptyProperty","enums","queries","mutations","subscriptions","apiGraphqlConfig","getConfig","API","GraphQL","Error","isApiGraphQLConfig","addSchemaToClient","getInternals","generateModelsPropertyOnAmplifyConfigure","clientRef","Hub","listen","coreEvent","isConfigureEventWithResourceConfig","payload","apiGraphQLConfig","data","Proxy","get"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/api-graphql/src/internals/generateClient.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Hub } from '@aws-amplify/core';\nimport { addSchemaToClient, } from '@aws-amplify/data-schema/runtime';\nimport { __amplify, __apiKey, __authMode, __authToken, __endpoint, __headers, getInternals, } from '../types';\nimport { isApiGraphQLConfig } from './utils/runtimeTypeGuards/isApiGraphQLProviderConfig';\nimport { isConfigureEventWithResourceConfig } from './utils/runtimeTypeGuards/isConfigureEventWithResourceConfig';\nimport { cancel, graphql, isCancelError } from './v6';\n/**\n * @private\n *\n * Creates a client that can be used to make GraphQL requests, using a provided `AmplifyClassV6`\n * compatible context object for config and auth fetching.\n *\n * @param params\n * @returns\n */\nexport function generateClient(params) {\n    const client = {\n        [__amplify]: params.amplify,\n        [__authMode]: params.authMode,\n        [__authToken]: params.authToken,\n        [__apiKey]: 'apiKey' in params ? params.apiKey : undefined,\n        [__endpoint]: 'endpoint' in params ? params.endpoint : undefined,\n        [__headers]: params.headers,\n        graphql,\n        cancel,\n        isCancelError,\n        models: emptyProperty,\n        enums: emptyProperty,\n        queries: emptyProperty,\n        mutations: emptyProperty,\n        subscriptions: emptyProperty,\n    };\n    const apiGraphqlConfig = params.amplify.getConfig().API?.GraphQL;\n    if (client[__endpoint]) {\n        if (!client[__authMode]) {\n            throw new Error('generateClient() requires an explicit `authMode` when `endpoint` is provided.');\n        }\n        if (client[__authMode] === 'apiKey' && !client[__apiKey]) {\n            throw new Error(\"generateClient() requires an explicit `apiKey` when `endpoint` is provided and `authMode = 'apiKey'`.\");\n        }\n    }\n    if (!client[__endpoint]) {\n        if (isApiGraphQLConfig(apiGraphqlConfig)) {\n            addSchemaToClient(client, apiGraphqlConfig, getInternals);\n        }\n        else {\n            // This happens when the `Amplify.configure()` call gets evaluated after the `generateClient()` call.\n            //\n            // Cause: when the `generateClient()` and the `Amplify.configure()` calls are located in\n            // different source files, script bundlers may randomly arrange their orders in the production\n            // bundle.\n            //\n            // With the current implementation, the `client.models` instance created by `generateClient()`\n            // will be rebuilt on every `Amplify.configure()` call that's provided with a valid GraphQL\n            // provider configuration.\n            //\n            // TODO: revisit, and reverify this approach when enabling multiple clients for multi-endpoints\n            // configuration.\n            generateModelsPropertyOnAmplifyConfigure(client);\n        }\n    }\n    return client;\n}\nconst generateModelsPropertyOnAmplifyConfigure = (clientRef) => {\n    Hub.listen('core', coreEvent => {\n        if (!isConfigureEventWithResourceConfig(coreEvent.payload)) {\n            return;\n        }\n        const apiGraphQLConfig = coreEvent.payload.data.API?.GraphQL;\n        if (isApiGraphQLConfig(apiGraphQLConfig)) {\n            addSchemaToClient(clientRef, apiGraphQLConfig, getInternals);\n        }\n    });\n};\nconst emptyProperty = new Proxy({}, {\n    get() {\n        throw new Error('Client could not be generated. This is likely due to `Amplify.configure()` not being called prior to `generateClient()` or because the configuration passed to `Amplify.configure()` is missing GraphQL provider configuration.');\n    },\n});\n"],"mappings":";;;;;;;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAcA,CAACC,MAAM,EAAE;EACnC,MAAMC,MAAM,GAAG;IACX,CAACC,SAAS,GAAGF,MAAM,CAACG,OAAO;IAC3B,CAACC,UAAU,GAAGJ,MAAM,CAACK,QAAQ;IAC7B,CAACC,WAAW,GAAGN,MAAM,CAACO,SAAS;IAC/B,CAACC,QAAQ,GAAG,QAAQ,IAAIR,MAAM,GAAGA,MAAM,CAACS,MAAM,GAAGC,SAAS;IAC1D,CAACC,UAAU,GAAG,UAAU,IAAIX,MAAM,GAAGA,MAAM,CAACY,QAAQ,GAAGF,SAAS;IAChE,CAACG,SAAS,GAAGb,MAAM,CAACc,OAAO;IAC3BC,OAAO;IACPC,MAAM;IACNC,aAAa;IACbC,MAAM,EAAEC,aAAa;IACrBC,KAAK,EAAED,aAAa;IACpBE,OAAO,EAAEF,aAAa;IACtBG,SAAS,EAAEH,aAAa;IACxBI,aAAa,EAAEJ;EACvB,CAAK;EACD,MAAMK,gBAAgB,GAAGxB,MAAM,CAACG,OAAO,CAACsB,SAAS,EAAE,CAACC,GAAG,EAAEC,OAAO;EAChE,IAAI1B,MAAM,CAACU,UAAU,CAAC,EAAE;IACpB,IAAI,CAACV,MAAM,CAACG,UAAU,CAAC,EAAE;MACrB,MAAM,IAAIwB,KAAK,CAAC,+EAA+E,CAAC;IAC5G;IACQ,IAAI3B,MAAM,CAACG,UAAU,CAAC,KAAK,QAAQ,IAAI,CAACH,MAAM,CAACO,QAAQ,CAAC,EAAE;MACtD,MAAM,IAAIoB,KAAK,CAAC,uGAAuG,CAAC;IACpI;EACA;EACI,IAAI,CAAC3B,MAAM,CAACU,UAAU,CAAC,EAAE;IACrB,IAAIkB,kBAAkB,CAACL,gBAAgB,CAAC,EAAE;MACtCM,iBAAiB,CAAC7B,MAAM,EAAEuB,gBAAgB,EAAEO,YAAY,CAAC;IACrE,CAAS,MACI;MACb;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACYC,wCAAwC,CAAC/B,MAAM,CAAC;IAC5D;EACA;EACI,OAAOA,MAAM;AACjB;AACA,MAAM+B,wCAAwC,GAAIC,SAAS,IAAK;EAC5DC,GAAG,CAACC,MAAM,CAAC,MAAM,EAAEC,SAAS,IAAI;IAC5B,IAAI,CAACC,kCAAkC,CAACD,SAAS,CAACE,OAAO,CAAC,EAAE;MACxD;IACZ;IACQ,MAAMC,gBAAgB,GAAGH,SAAS,CAACE,OAAO,CAACE,IAAI,CAACd,GAAG,EAAEC,OAAO;IAC5D,IAAIE,kBAAkB,CAACU,gBAAgB,CAAC,EAAE;MACtCT,iBAAiB,CAACG,SAAS,EAAEM,gBAAgB,EAAER,YAAY,CAAC;IACxE;EACA,CAAK,CAAC;AACN,CAAC;AACD,MAAMZ,aAAa,GAAG,IAAIsB,KAAK,CAAC,EAAE,EAAE;EAChCC,GAAGA,CAAA,EAAG;IACF,MAAM,IAAId,KAAK,CAAC,iOAAiO,CAAC;EAC1P;AACA,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}