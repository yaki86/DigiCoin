{"ast":null,"code":"import { AWS_CLOUDWATCH_CATEGORY } from '../constants.mjs';\nimport { LogType } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst LOG_LEVELS = {\n  VERBOSE: 1,\n  DEBUG: 2,\n  INFO: 3,\n  WARN: 4,\n  ERROR: 5,\n  NONE: 6\n};\n/**\n * Write logs\n * @class Logger\n */\nclass ConsoleLogger {\n  /**\n   * @constructor\n   * @param {string} name - Name of the logger\n   */\n  constructor(name) {\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LogType.WARN;\n    this.name = name;\n    this.level = level;\n    this._pluggables = [];\n  }\n  _padding(n) {\n    return n < 10 ? '0' + n : '' + n;\n  }\n  _ts() {\n    const dt = new Date();\n    return [this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') + '.' + dt.getMilliseconds();\n  }\n  configure(config) {\n    if (!config) return this._config;\n    this._config = config;\n    return this._config;\n  }\n  /**\n   * Write log\n   * @method\n   * @memeberof Logger\n   * @param {LogType|string} type - log type, default INFO\n   * @param {string|object} msg - Logging message or object\n   */\n  _log(type) {\n    let loggerLevelName = this.level;\n    if (ConsoleLogger.LOG_LEVEL) {\n      loggerLevelName = ConsoleLogger.LOG_LEVEL;\n    }\n    if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n      loggerLevelName = window.LOG_LEVEL;\n    }\n    const loggerLevel = LOG_LEVELS[loggerLevelName];\n    const typeLevel = LOG_LEVELS[type];\n    if (!(typeLevel >= loggerLevel)) {\n      // Do nothing if type is not greater than or equal to logger level (handle undefined)\n      return;\n    }\n    let log = console.log.bind(console);\n    if (type === LogType.ERROR && console.error) {\n      log = console.error.bind(console);\n    }\n    if (type === LogType.WARN && console.warn) {\n      log = console.warn.bind(console);\n    }\n    if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n      if (type === LogType.INFO && console.info) {\n        log = console.info.bind(console);\n      }\n      if (type === LogType.DEBUG && console.debug) {\n        log = console.debug.bind(console);\n      }\n    }\n    const prefix = `[${type}] ${this._ts()} ${this.name}`;\n    let message = '';\n    for (var _len = arguments.length, msg = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      msg[_key - 1] = arguments[_key];\n    }\n    if (msg.length === 1 && typeof msg[0] === 'string') {\n      message = `${prefix} - ${msg[0]}`;\n      log(message);\n    } else if (msg.length === 1) {\n      message = `${prefix} ${msg[0]}`;\n      log(prefix, msg[0]);\n    } else if (typeof msg[0] === 'string') {\n      let obj = msg.slice(1);\n      if (obj.length === 1) {\n        obj = obj[0];\n      }\n      message = `${prefix} - ${msg[0]} ${obj}`;\n      log(`${prefix} - ${msg[0]}`, obj);\n    } else {\n      message = `${prefix} ${msg}`;\n      log(prefix, msg);\n    }\n    for (const plugin of this._pluggables) {\n      const logEvent = {\n        message,\n        timestamp: Date.now()\n      };\n      plugin.pushLogs([logEvent]);\n    }\n  }\n  /**\n   * Write General log. Default to INFO\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  log() {\n    for (var _len2 = arguments.length, msg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      msg[_key2] = arguments[_key2];\n    }\n    this._log(LogType.INFO, ...msg);\n  }\n  /**\n   * Write INFO log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  info() {\n    for (var _len3 = arguments.length, msg = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      msg[_key3] = arguments[_key3];\n    }\n    this._log(LogType.INFO, ...msg);\n  }\n  /**\n   * Write WARN log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  warn() {\n    for (var _len4 = arguments.length, msg = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      msg[_key4] = arguments[_key4];\n    }\n    this._log(LogType.WARN, ...msg);\n  }\n  /**\n   * Write ERROR log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  error() {\n    for (var _len5 = arguments.length, msg = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      msg[_key5] = arguments[_key5];\n    }\n    this._log(LogType.ERROR, ...msg);\n  }\n  /**\n   * Write DEBUG log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  debug() {\n    for (var _len6 = arguments.length, msg = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      msg[_key6] = arguments[_key6];\n    }\n    this._log(LogType.DEBUG, ...msg);\n  }\n  /**\n   * Write VERBOSE log\n   * @method\n   * @memeberof Logger\n   * @param {string|object} msg - Logging message or object\n   */\n  verbose() {\n    for (var _len7 = arguments.length, msg = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      msg[_key7] = arguments[_key7];\n    }\n    this._log(LogType.VERBOSE, ...msg);\n  }\n  addPluggable(pluggable) {\n    if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n      this._pluggables.push(pluggable);\n      pluggable.configure(this._config);\n    }\n  }\n  listPluggables() {\n    return this._pluggables;\n  }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\nexport { ConsoleLogger };","map":{"version":3,"names":["LOG_LEVELS","VERBOSE","DEBUG","INFO","WARN","ERROR","NONE","ConsoleLogger","constructor","name","level","arguments","length","undefined","LogType","_pluggables","_padding","n","_ts","dt","Date","getMinutes","getSeconds","join","getMilliseconds","configure","config","_config","_log","type","loggerLevelName","LOG_LEVEL","window","loggerLevel","typeLevel","log","console","bind","error","warn","BIND_ALL_LOG_LEVELS","info","debug","prefix","message","_len","msg","Array","_key","obj","slice","plugin","logEvent","timestamp","now","pushLogs","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","verbose","_len7","_key7","addPluggable","pluggable","getCategoryName","AWS_CLOUDWATCH_CATEGORY","push","listPluggables"],"sources":["/Users/yaki/digi-coin/digi-coin-app/node_modules/@aws-amplify/core/src/Logger/ConsoleLogger.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AWS_CLOUDWATCH_CATEGORY } from '../constants';\nimport { LogType } from './types';\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nexport class ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        if (ConsoleLogger.BIND_ALL_LOG_LEVELS) {\n            if (type === LogType.INFO && console.info) {\n                log = console.info.bind(console);\n            }\n            if (type === LogType.DEBUG && console.debug) {\n                log = console.debug.bind(console);\n            }\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\nConsoleLogger.BIND_ALL_LOG_LEVELS = false;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}